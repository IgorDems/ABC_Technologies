pipeline {
    agent {
        label 'agent193'
    }
    
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub_credentials')
        DOCKER_REGISTRY = 'docker.io'
        NAMESPACE = 'abc-tech'
        APP_NAME = 'abctechnologies'
    }
    
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/IgorDems/ABC_Technologies.git'
            }
        }

        stage('Build') {
            steps {
                bat 'mvn clean compile test package'
            }
            post {
                success {
                    echo 'Build successful!'
                }
                failure {
                    echo 'Build failed!'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def dockerImage = docker.build('abctechnologies', '-f Dockerfile .')
                }       
            }
        }  

        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub_credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
                        sh "docker tag abctechnologies $DOCKER_USERNAME/abctechnologies"
                        sh "docker push $DOCKER_USERNAME/abctechnologies"
                        echo "Successfully built and uploaded to DockerHub"
                    }
                }
            }
        }

        stage('Pull Docker Image and start Docker container') {
            steps {
                script {
                    sh 'ansible-playbook ansible/ansibleDocCont.yml --connection=local'
                    echo "Successfully pull from DockerHub and start container"
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}