pipeline {
    agent { label 'agent193' }
    stages {
        stage('Kubernetes Configuration') {
            steps {
                withCredentials([
                    string(credentialsId: 'kube-server', variable: 'KUBE_SERVER'),
                    string(credentialsId: 'kube-ca-data', variable: 'KUBE_CA_DATA'),
                    string(credentialsId: 'kube-client-cert', variable: 'KUBE_CLIENT_CERT'),
                    string(credentialsId: 'kube-client-key', variable: 'KUBE_CLIENT_KEY')
                ]) {
                    script {
                        // Read the kubeconfig template from Jenkins credentials
                        def kubeconfigTemplate = libraryResource 'kubeconfig-template'
                        
                        // Alternative: Read using configFileProvider
                        configFileProvider([configFile(fileId: 'kubeconfig-template', targetLocation: '/tmp/kubeconfig-template.yml')]) {
                            // Substitute variables and create final kubeconfig
                            sh '''
                                envsubst < /tmp/kubeconfig-template.yml > /tmp/kubeconfig
                                chmod 600 /tmp/kubeconfig
                            '''
                            
                            // Use the kubeconfig
                            withEnv(["KUBECONFIG=/tmp/kubeconfig"]) {
                                sh 'kubectl get nodes'
                                sh 'kubectl apply -f k8s/deployment.yaml'
                                sh 'kubectl apply -f k8s/service.yaml'
                            }
                        }
                    }
                }
            }
        }
    }
}