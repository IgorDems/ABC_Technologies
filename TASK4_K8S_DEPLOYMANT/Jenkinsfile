pipeline {
    agent { label 'agent193' }

    environment {
        DOCKER_IMAGE = "abctechnologies"
        DOCKER_HUB = "demsdocker"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'fix4docker', url: 'https://github.com/IgorDems/ABC_Technologies.git'
            }
        }

        stage('Build') {
            steps {
                sh 'echo Java:'
                sh 'java -version'
                sh 'echo Maven:'
                sh 'mvn -version'
                sh 'mvn clean install -Dmaven.test.skip=true -Dmaven.repo.local=$HOME/.m2/repository'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE} ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub_creds', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
                    sh "docker tag ${DOCKER_IMAGE} ${DOCKER_HUB}/${DOCKER_IMAGE}"
                    sh "docker push ${DOCKER_HUB}/${DOCKER_IMAGE}"
                }
            }
        }

        stage('Run Ansible to Start Container') {
            steps {
                sh 'ansible-playbook ansible/ansibleDocCont.yml --connection=local'
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withKubeConfig([credentialsId: 'certificate_file']) {
                    sh 'kubectl get nodes'
                    sh 'kubectl create namespace abc-tech --dry-run=client -o yaml | kubectl apply -f -'
                    sh 'kubectl create namespace metallb-system --dry-run=client -o yaml | kubectl apply -f -'
                    sh 'kubectl apply -f k8s/rbac.yml'
                    sh 'kubectl apply -f k8s/deployment.yml'
                    sh 'kubectl apply -f k8s/service.yml'

                    // ❗ FIXED LINE
                    sh 'kubectl rollout status deployment/abc-tech-deployment -n abc-tech --timeout=900s'
                }
            }
        }

        stage('Check Deployed App') {
            steps {
                withKubeConfig([credentialsId: 'certificate_file']) {
                    sh 'kubectl get pods -n abc-tech'
                    sh 'kubectl describe pods -n abc-tech -l app=abc-tech-app'
                    sh 'kubectl logs -n abc-tech -l app=abc-tech-app --all-containers --tail=100'
                }
            }
        }
    }

    post {
        failure {
            echo '❌ Deployment failed.'
        }
        success {
            echo '✅ Pipeline completed successfully!'
        }
    }
}
