apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ app_name }}-dep
  namespace: {{ namespace }}
  labels:
    app: {{ app_name }}
spec:
  replicas: 2
  minReadySeconds: 45
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  selector:
    matchLabels:
      app: {{ app_name }}
  template:
    metadata:
      labels:
        app: {{ app_name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
      containers:
        - name: {{ app_name }}
          image: {{ image }}
          ports:
            - containerPort: 8080
              name: http
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 20
          envFrom:
            - configMapRef:
                name: "{{ app_name }}-config"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ app_name }}-service
  namespace: {{ namespace }}
spec:
  type: NodePort
  selector:
    app: {{ app_name }}
  ports:
    - port: 80
      targetPort: 8080
      name: http